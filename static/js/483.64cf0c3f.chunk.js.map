{"version":3,"file":"static/js/483.64cf0c3f.chunk.js","mappings":"8QACA,EAA4B,yBAA5B,EAAgE,wBAAhE,EAAoG,yBAApG,EAA0I,0BAA1I,EAAgL,yBAAhL,EAAmQ,4BAAnQ,EAA0S,wBAA1S,EAA4U,uBAA5U,EAA8W,wB,SCQjWA,EAAe,WAAO,IAAD,MAC1BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAeI,EAA7B,GAC5B,GAAE,CAACR,IAEJ,IAAMS,EAAM,iBAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAUY,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAExC,OACE,iCACE,SAACC,EAAA,EAAD,WACE,SAAC,KAAD,CAASC,UAAWC,EAAcC,GAAIN,EAAtC,8BAIF,UAACG,EAAA,EAAD,YACE,iBAAKC,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXE,IACEb,EAAQc,YAAR,yCACsCd,EAAQc,aAD9C,qEAIFC,IAAG,UAAEf,EAAQgB,aAAV,QAAmBhB,EAAQiB,QAEhC,iBAAKP,UAAWC,EAAhB,WACE,wBAAKX,EAAQkB,kBACb,eAAGR,UAAWC,EAAd,yBAEE,kBAAMD,UAAWC,EAAjB,cAAkCX,EAAQmB,oBAE5C,cAAGT,UAAWC,EAAd,yBACA,kBAAMD,UAAWC,EAAjB,cAAkCX,EAAQoB,aAE1C,cAAGV,UAAWC,EAAd,sBACA,iBAAMD,UAAWC,EAAjB,SACGX,EAAQqB,OACLrB,EAAQqB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGN,IAAP,IAAaO,KAAK,KACvC,YAIV,iBAAKd,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAZ,UACE,eAAIF,UAAWC,EAAf,oCAGJ,yBACE,SAAC,KAAD,CAASC,GAAG,UAAZ,UACE,eAAIF,UAAWC,EAAf,yCAKN,SAAC,KAAD,YAKT,EACD,G,oKC3EMc,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BACO,IAAMC,EAAiB,WAC5B,OAAOD,EAAAA,EAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,IAGd,EAEYK,EAAoB,SAAAC,GAC/B,OAAOL,EAAAA,EAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,IAGZ,EAEY5B,EAAe,SAAAN,GAC1B,OAAO6B,EAAAA,EAAAA,IAAA,iBAAoB7B,GAAW,CACpC+B,OAAQ,CACNC,QAASJ,IAGd,EAEYQ,EAAe,SAAApC,GAC1B,OAAO6B,EAAAA,EAAAA,IAAA,iBAAoB7B,EAApB,YAAuC,CAC5C+B,OAAQ,CACNC,QAASJ,IAGd,EAEYS,EAAe,SAAArC,GAC1B,OAAO6B,EAAAA,EAAAA,IAAA,iBAAoB7B,EAApB,YAAuC,CAC5C+B,OAAQ,CACNC,QAASJ,IAGd,C","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/movie.module.css?eb1f","Pages/MovieDetails/MovieDetails.js","fetch/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviePage\":\"movie_moviePage__NkvY3\",\"movieImg\":\"movie_movieImg__ZriOG\",\"movieInfo\":\"movie_movieInfo__xoMCd\",\"movieTitle\":\"movie_movieTitle__mGI0t\",\"movieSubT\":\"movie_movieSubT__Go81r\",\"moviePartOne\":\"movie_moviePartOne__KeeBF\",\"movieAddInfo\":\"movie_movieAddInfo__d33Tl\",\"addTitle\":\"movie_addTitle__LI6ZF\",\"addList\":\"movie_addList__fT0GT\",\"movieBtn\":\"movie_movieBtn__UK3pD\"};","import { useParams } from 'react-router-dom';\nimport { fetchDetails } from 'fetch/fetch';\nimport { useEffect, useState } from 'react';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Section } from 'components/Section/Section';\n\nimport css from './movie.module.css';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [details, setDetailsFilm] = useState([]);\n\n  useEffect(() => {\n    fetchDetails(movieId).then(({ data }) => setDetailsFilm(data));\n  }, [movieId]);\n\n  const goBack = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Section>\n        <NavLink className={css.movieBtn} to={goBack}>\n          Back to movie\n        </NavLink>\n      </Section>\n      <Section>\n        <div className={css.moviePage}>\n          <img\n            className={css.movieImg}\n            src={\n              details.poster_path\n                ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n                : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n            }\n            alt={details.title ?? details.name}\n          />\n          <div className={css.movieInfo}>\n            <h2>{details.original_title}</h2>\n            <p className={css.movieTitle}>\n              User score:\n              <span className={css.movieSubT}> {details.vote_average}</span>\n            </p>\n            <p className={css.movieTitle}>Overview: </p>\n            <span className={css.movieSubT}> {details.overview}</span>\n\n            <p className={css.movieTitle}>Genres:</p>\n            <span className={css.movieSubT}>\n              {details.genres\n                ? details.genres.map(el => el.name).join(' ')\n                : ''}\n            </span>\n          </div>\n        </div>\n        <div className={css.movieAddInfo}>\n          <h1 className={css.addTitle}>Additional information</h1>\n          <ul className={css.addList}>\n            <li>\n              <NavLink to=\"cast\">\n                <h2 className={css.movieTitle}>Cast information:</h2>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"rewievs\">\n                <h2 className={css.movieTitle}>Rewiev information:</h2>\n              </NavLink>\n            </li>\n          </ul>\n\n          <Outlet />\n        </div>\n      </Section>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '372e9c91a067b2d0ab40ec17b7b864be';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport const fetchTrendings = () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["MovieDetails","location","useLocation","movieId","useParams","useState","details","setDetailsFilm","useEffect","fetchDetails","then","data","goBack","state","from","Section","className","css","to","src","poster_path","alt","title","name","original_title","vote_average","overview","genres","map","el","join","API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchCredits","fetchReviews"],"sourceRoot":""}