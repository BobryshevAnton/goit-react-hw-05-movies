{"version":3,"file":"static/js/740.e4ae19aa.chunk.js","mappings":"qPACA,EAA0B,sBAA1B,EAA4D,wBAA5D,EAA+F,uBAA/F,EAAiI,uB,SCIpHA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAYI,EAAKC,KAA/B,GAC5B,GAAE,CAACT,KAEF,8BACuB,IAApBG,EAASO,QACR,eAAIC,UAAWC,EAAf,SACGT,EAASU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACvC,OACE,gBAAgCN,UAAWC,EAA3C,WACE,gBACED,UAAWC,EACXM,IACEH,EAAY,yCAC0BA,GAD1B,qEAIdI,IAAKH,KAEP,cAAGL,UAAWC,EAAd,SAA8BI,KAC9B,cAAGL,UAAWC,EAAd,SAA8BK,MAXvBH,EAAKE,EAAOC,EAcxB,OAGH,eAAGN,UAAWC,EAAd,WACE,kBADF,oDAOP,EACD,G,oKC1CMQ,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BACO,IAAMC,EAAiB,WAC5B,OAAOD,EAAAA,EAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,IAGd,EAEYK,EAAoB,SAAAC,GAC/B,OAAOL,EAAAA,EAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,IAGZ,EAEYE,EAAe,SAAA5B,GAC1B,OAAOqB,EAAAA,EAAAA,IAAA,iBAAoBrB,GAAW,CACpCuB,OAAQ,CACNC,QAASJ,IAGd,EAEYd,EAAe,SAAAN,GAC1B,OAAOqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,YAAuC,CAC5CuB,OAAQ,CACNC,QAASJ,IAGd,EAEYS,EAAe,SAAA7B,GAC1B,OAAOqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,YAAuC,CAC5CuB,OAAQ,CACNC,QAASJ,IAGd,C","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.js","fetch/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castImg\":\"cast_castImg__bJ13n\",\"castTitle\":\"cast_castTitle__ApOa2\",\"castList\":\"cast_castList__yD6XP\",\"castCard\":\"cast_castCard__7m4bw\"};","import { useParams } from 'react-router-dom';\nimport { fetchCredits } from 'fetch/fetch';\nimport { useState, useEffect } from 'react';\nimport css from './cast.module.css';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n\n  const [castInfo, setCastInfo] = useState([]);\n  useEffect(() => {\n    fetchCredits(movieId).then(({ data }) => setCastInfo(data.cast));\n  }, [movieId]);\n  return (\n    <>\n      {castInfo.length !== 0 ? (\n        <ul className={css.castList}>\n          {castInfo.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id + name + character} className={css.castCard}>\n                <img\n                  className={css.castImg}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n                  }\n                  alt={name}\n                />\n                <p className={css.castTitle}>{name}</p>\n                <p className={css.castTitle}>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.castTitle}>\n          <br />\n          Sorry, we dont have any casts for this movie.\n        </p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '372e9c91a067b2d0ab40ec17b7b864be';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport const fetchTrendings = () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["Cast","movieId","useParams","useState","castInfo","setCastInfo","useEffect","fetchCredits","then","data","cast","length","className","css","map","id","profile_path","name","character","src","alt","API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchDetails","fetchReviews"],"sourceRoot":""}