{"version":3,"file":"static/js/85.874df5ca.chunk.js","mappings":"wOACA,EAAsH,+BAAtH,EAAuV,mCAAvV,EAAsY,+B,0BCAtY,EAA8B,gCAA9B,EAA4E,gCAA5E,EAAwH,8B,kBCI3GA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,OACE,SAACC,EAAA,EAAD,WACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,aAAa,KAAKP,SAVT,SAAAQ,GACnBA,EAAEC,iBACFT,EAASE,GACTM,EAAEE,OAAOC,QACTR,EAAS,GACV,EAKK,WACE,kBACES,KAAK,OACLC,KAAK,OACLR,UAAWC,EACXQ,YAAY,sBACZC,UAAQ,EACRC,SAAU,SAAAR,GAAC,OAAIL,EAASK,EAAEE,OAAOR,MAAtB,KAEb,mBAAQU,KAAK,SAASP,UAAWC,EAAjC,0BAOT,E,SC1BYW,EAAc,WACzB,OAA0BhB,EAAAA,EAAAA,UAAS,IAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAOQ,EAAaE,IAAI,QAC9B,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAOuB,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACK,KAATb,IACCA,GACHY,GAAa,IAGfE,EAAAA,EAAAA,IAAkBd,GAAMe,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,IAAxBA,EAAKC,QAAQC,QACfN,GAAa,GAGfN,GAAS,OAAIU,EAAKC,SACnB,IACF,GAAE,CAACjB,IAMJ,OACE,iCACE,SAACd,EAAD,CAAYC,SANK,SAAAE,GACnBoB,EAAgB,CAAET,KAAMX,GACzB,KAKG,UAACE,EAAA,EAAD,WACGoB,IACC,eAAInB,UAAWC,EAAf,SACGY,EAAMc,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOrB,EAAwB,EAAxBA,KAAMsB,EAAkB,EAAlBA,YAC7B,OACE,SAACC,EAAA,EAAD,CAEEH,GAAIA,EACJpB,KAAMA,EACNqB,MAAOA,EACPC,YAAaA,GAJRF,EAOV,OAGHT,IACA,gBAAKnB,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,oDAMX,EACD,G,2EC5DA,EAA2B,2BAA3B,EAAgE,0BAAhE,EAA0G,gCAA1G,EAAqJ,2B,SCIxI8B,EAAW,SAAC,GAAsC,IAApCH,EAAmC,EAAnCA,GAAIE,EAA+B,EAA/BA,YAAatB,EAAkB,EAAlBA,KAAMqB,EAAY,EAAZA,MAC1CG,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,KAAD,CAEEC,MAAO,CAAEC,KAAMH,GACfI,GAAE,iBAAYR,GACd5B,UAAWC,EAJb,UAME,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXoC,IACEP,EAAW,yCAC2BA,GAClC,oGAENQ,IAAG,OAAE9B,QAAF,IAAEA,EAAAA,EAAQqB,KAEf,eAAI7B,UAAWC,EAAf,gBAA8B4B,QAA9B,IAA8BA,EAAAA,EAASrB,QAfpCoB,IAoBZ,C,oKC7BKW,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BACO,IAAMC,EAAiB,WAC5B,OAAOD,EAAAA,EAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,IAGd,EAEYjB,EAAoB,SAAAsB,GAC/B,OAAOJ,EAAAA,EAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTM,MAAOD,IAGZ,EAEYE,EAAe,SAAAC,GAC1B,OAAOP,EAAAA,EAAAA,IAAA,iBAAoBO,GAAW,CACpCL,OAAQ,CACNC,QAASJ,IAGd,EAEYS,EAAe,SAAAD,GAC1B,OAAOP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAuC,CAC5CL,OAAQ,CACNC,QAASJ,IAGd,EAEYU,EAAe,SAAAF,GAC1B,OAAOP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAuC,CAC5CL,OAAQ,CACNC,QAASJ,IAGd,C","sources":["webpack://react-homework-template/./src/Pages/MovieSearch/movieSearch.module.css?3121","webpack://react-homework-template/./src/components/SearchForm/searchForm.module.css?a515","components/SearchForm/SearchForm.js","Pages/MovieSearch/MovieSearch.js","webpack://react-homework-template/./src/components/FilmBase/filmBAse.module.css?6c33","components/FilmBase/FilmBase.js","fetch/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendStyle\":\"movieSearch_trendStyle__xr-Ms\",\"trendTitle\":\"movieSearch_trendTitle__y5XE0\",\"trendList\":\"movieSearch_trendList__ZPxtY\",\"trendCard\":\"movieSearch_trendCard__kf3-x\",\"trendImg\":\"movieSearch_trendImg__sC+14\",\"trendCardTitle\":\"movieSearch_trendCardTitle__5sjXI\",\"trendBtn\":\"movieSearch_trendBtn__ILI2m\",\"trendListText\":\"movieSearch_trendListText__gANaX\",\"trendText\":\"movieSearch_trendText__AO8Q3\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchStyle\":\"searchForm_searchStyle__H9LdY\",\"searchInput\":\"searchForm_searchInput__u0Pc-\",\"searchBtn\":\"searchForm_searchBtn__xGIpL\"};","import { useState } from 'react';\nimport css from './searchForm.module.css';\nimport PropTypes from 'prop-types';\nimport { Section } from 'components/Section/Section';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    e.target.reset();\n    setValue('');\n  };\n\n  return (\n    <Section>\n      <div className={css.searchStyle}>\n        <form autoComplete=\"on\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.searchInput}\n            placeholder=\"Enter any film name\"\n            required\n            onChange={e => setValue(e.target.value)}\n          />\n          <button type=\"submit\" className={css.searchBtn}>\n            Search\n          </button>\n        </form>\n      </div>\n    </Section>\n  );\n};\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import css from './movieSearch.module.css';\nimport { fetchSearchMovies } from 'fetch/fetch';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { FilmBase } from 'components/FilmBase/FilmBase';\nimport { Section } from 'components/Section/Section';\n\nexport const MovieSearch = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n  const [isGallery, setIsGallery] = useState(false);\n\n  useEffect(() => {\n    if (name === '') return;\n    if (!name) {\n      setIsGallery(false);\n    }\n\n    fetchSearchMovies(name).then(({ data }) => {\n      if (data.results.length !== 0) {\n        setIsGallery(true);\n      }\n\n      setFilms([...data.results]);\n    });\n  }, [name]);\n\n  const handleSubmit = value => {\n    setSearchParams({ name: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      <Section>\n        {isGallery && (\n          <ul className={css.trendList}>\n            {films.map(({ id, title, name, poster_path }) => {\n              return (\n                <FilmBase\n                  key={id}\n                  id={id}\n                  name={name}\n                  title={title}\n                  poster_path={poster_path}\n                />\n              );\n            })}\n          </ul>\n        )}\n        {!isGallery && (\n          <div className={css.trendListText}>\n            <p className={css.trendText}>Please, enter any film name... </p>\n          </div>\n        )}\n      </Section>\n    </>\n  );\n};\nexport default MovieSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"filmBAse_filmCard__71EdX\",\"filmImg\":\"filmBAse_filmImg__lZAgZ\",\"filmCardTitle\":\"filmBAse_filmCardTitle__-IIEC\",\"filmName\":\"filmBAse_filmName__6Ikff\"};","import { useLocation } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './filmBAse.module.css';\n\nexport const FilmBase = ({ id, poster_path, name, title }) => {\n  const location = useLocation();\n  return (\n    <>\n      <NavLink\n        key={id}\n        state={{ from: location }}\n        to={`/movie/${id}`}\n        className={css.filmCardTitle}\n      >\n        <div className={css.filmCard}>\n          <img\n            className={css.filmImg}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://ih1.redbubble.net/image.512138487.5983/fposter,small,wall_texture,product,750x1000.u3.jpg'\n            }\n            alt={name ?? title}\n          />\n          <h2 className={css.filmName}>{title ?? name}</h2>\n        </div>\n      </NavLink>\n    </>\n  );\n};\nexport default FilmBase;\nFilmBase.propTypes = {\n  id: PropTypes.number,\n  poster_path: PropTypes.string,\n  name: PropTypes.string,\n  title: PropTypes.string,\n};\n","import axios from 'axios';\nconst API_KEY = '372e9c91a067b2d0ab40ec17b7b864be';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport const fetchTrendings = () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["SearchForm","onSubmit","useState","value","setValue","Section","className","css","autoComplete","e","preventDefault","target","reset","type","name","placeholder","required","onChange","MovieSearch","films","setFilms","useSearchParams","searchParams","setSearchParams","get","isGallery","setIsGallery","useEffect","fetchSearchMovies","then","data","results","length","map","id","title","poster_path","FilmBase","location","useLocation","state","from","to","src","alt","API_KEY","axios","fetchTrendings","params","api_key","search","query","fetchDetails","movieId","fetchCredits","fetchReviews"],"sourceRoot":""}